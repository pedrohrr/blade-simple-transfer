{
  "swagger": "2.0",
  "info": {
    "description": "This is a simple Rest API to simulate account transfers",
    "version": "1.0.0",
    "title": "Simple Transfer",
    "contact": {
      "email": "pedro.rib.rod@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "basePath": "/",
  "tags": [
    {
      "name": "client",
      "description": "All your client data"
    },
    {
      "name": "account",
      "description": "Acount management"
    },
    {
      "name": "transfer",
      "description": "Trasfer operations"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/client": {
      "post": {
        "tags": [
          "client"
        ],
        "summary": "Create a new client",
        "operationId": "addClient",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Client object to be created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid content"
          },
          "409": {
            "description": "Client already exist"
          }
        }
      },
      "put": {
        "tags": [
          "client"
        ],
        "summary": "Updates a client data",
        "operationId": "updateClient",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Client object to be updated",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid content"
          },
          "404": {
            "description": "Client not found"
          }
        }
      }
    },
    "/client/findByName": {
      "get": {
        "tags": [
          "client"
        ],
        "summary": "Finds Clients by name",
        "description": "Both firstname and lastname will be considered in the query",
        "operationId": "findClientsByName",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Name to look for client",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RestResponse"
              }
            }
          },
          "404": {
            "description": "No client found"
          }
        }
      }
    },
    "/client/{clientId}": {
      "get": {
        "tags": [
          "client"
        ],
        "summary": "Find client by ID",
        "description": "Returns a single client",
        "operationId": "getClientById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "description": "ID of client to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          },
          "404": {
            "description": "Client not found"
          }
        }
      },
      "delete": {
        "tags": [
          "client"
        ],
        "summary": "Deletes a client",
        "description": "",
        "operationId": "deleteClient",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "description": "ID of client to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "404": {
            "description": "Client not found"
          }
        }
      }
    },
    "/account": {
      "post": {
        "tags": [
          "account"
        ],
        "summary": "Create a new account for a given client ID",
        "operationId": "addAccount",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Account object to be created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid content"
          },
          "404": {
            "description": "Client not found"
          },
          "409": {
            "description": "Account already exist"
          }
        }
      },
      "put": {
        "tags": [
          "account"
        ],
        "summary": "Create a new account for a given client ID",
        "operationId": "addBalance",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Account object to be created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid content"
          }
        }
      }
    },
    "/account/{accountId}": {
      "get": {
        "tags": [
          "account"
        ],
        "summary": "Find an account by ID",
        "description": "Returns a single account",
        "operationId": "getAccountById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "ID of account to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          },
          "400": {
            "description": "Invalid ID"
          },
          "404": {
            "description": "Account not found"
          }
        }
      },
      "delete": {
        "tags": [
          "account"
        ],
        "summary": "Deletes an account",
        "description": "",
        "operationId": "deleteAccount",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "ID of account to be deleted",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "404": {
            "description": "Account not found"
          }
        }
      }
    },
    "/client/{clientId}/account": {
      "get": {
        "tags": [
          "client",
          "account"
        ],
        "summary": "List all accounts from a given client",
        "operationId": "getAccountsByClientId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "description": "ID of client to look for accounts",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RestResponse"
              }
            }
          },
          "404": {
            "description": "No account found"
          }
        }
      }
    },
    "/transfer": {
      "post": {
        "tags": [
          "transfer"
        ],
        "summary": "Creates a new transfer",
        "operationId": "addTransfer",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Transfer object to be created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid content"
          },
          "404": {
            "description": "Sender/Receiver not found"
          }
        }
      }
    },
    "/transfer/{transferId}": {
      "get": {
        "tags": [
          "transfer"
        ],
        "summary": "Find a Transfer by the given ID",
        "operationId": "getTransferById",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "transferId",
            "in": "path",
            "description": "ID of transfer to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/RestResponse"
            }
          },
          "404": {
            "description": "Transfer not found"
          }
        }
      }
    },
    "/client/{clientId}/transfer": {
      "get": {
        "tags": [
          "client",
          "transfer"
        ],
        "summary": "List all transfers from a given client",
        "operationId": "getTransfersByClientId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "description": "ID of client to look for transfers",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RestResponse"
              }
            }
          },
          "404": {
            "description": "No transfer found"
          }
        }
      }
    },
    "/account/{accountId}/transfer": {
      "get": {
        "tags": [
          "account",
          "transfer"
        ],
        "summary": "List all transfers from a given account",
        "operationId": "getTransfersByAccountId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "ID of account to look for transfers",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RestResponse"
              }
            }
          },
          "404": {
            "description": "No transfer found"
          }
        }
      }
    }
  },
  "definitions": {
    "AccountCreate": {
      "type": "object",
      "properties": {
        "iban": {
          "type": "string",
          "description": "IBAN for the account"
        },
        "currency": {
          "type": "string",
          "maxLength": 3,
          "minLength": 3,
          "description": "Currency iso code"
        },
        "client": {
          "type": "integer",
          "format": "int64",
          "description": "Id of the client"
        }
      }
    },
    "AccountDeposit": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "amount": {
          "type": "number",
          "description": "Amount of money to deposit"
        }
      }
    },
    "AccountMinimal": {
      "type": "object",
      "properties": {
        "iban": {
          "type": "string"
        },
        "client": {
          "$ref": "#/definitions/ClientMinimal"
        }
      }
    },
    "AccountDetailed": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "iban": {
          "type": "string"
        },
        "currency": {
          "type": "string"
        },
        "client": {
          "$ref": "#/definitions/ClientMinimal"
        },
        "balance": {
          "type": "number"
        },
        "status": {
          "type": "string",
          "enum": [
            "ACTIVE",
            "BLOCKED",
            "DEACTIVATED"
          ]
        }
      }
    },
    "ClientCreate": {
      "type": "object",
      "properties": {
        "firstname": {
          "type": "string"
        },
        "lastname": {
          "type": "string"
        },
        "passport": {
          "type": "string"
        }
      }
    },
    "ClientUpdate": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "firstname": {
          "type": "string"
        },
        "lastname": {
          "type": "string"
        },
        "passport": {
          "type": "string"
        }
      }
    },
    "ClientMinimal": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string",
          "description": "Client fullname"
        }
      }
    },
    "ClientDetailed": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "firstname": {
          "type": "string"
        },
        "lastname": {
          "type": "string"
        },
        "passport": {
          "type": "string"
        }
      }
    },
    "TransferCreate": {
      "type": "object",
      "properties": {
        "sender": {
          "type": "integer",
          "format": "int64",
          "description": "Account ID of the Sender"
        },
        "receiver": {
          "type": "integer",
          "format": "int64",
          "description": "Account ID of the Receiver"
        },
        "amount": {
          "type": "number"
        },
        "notes": {
          "type": "string",
          "description": "Any aditional notes"
        }
      }
    },
    "TransferMinimal": {
      "type": "object",
      "properties": {
        "sender": {
          "$ref": "#/definitions/AccountMinimal"
        },
        "receiver": {
          "$ref": "#/definitions/AccountMinimal"
        },
        "amount": {
          "type": "number"
        }
      }
    },
    "TransferDetailed": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "sender": {
          "$ref": "#/definitions/AccountMinimal"
        },
        "receiver": {
          "$ref": "#/definitions/AccountMinimal"
        },
        "amount": {
          "type": "number"
        },
        "conversion": {
          "type": "number",
          "description": "Conversion rate applied"
        },
        "status": {
          "type": "string",
          "enum": [
            "POSTED",
            "CANCELED",
            "COMPLETED"
          ]
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "processedAt": {
          "type": "string",
          "format": "date-time"
        },
        "notes": {
          "type": "string",
          "description": "Any aditional notes regarding transfer status"
        }
      }
    },
    "RestResponse": {
      "type": "object",
      "properties": {
        "payload": {
          "type": "object"
        },
        "success": {
          "type": "boolean"
        },
        "msg": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    }
  }
}